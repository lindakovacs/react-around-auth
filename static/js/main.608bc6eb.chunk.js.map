{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/Login.js","components/Register.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/PopupWithImage.js","utils/Api.js","utils/auth.js","components/ProtectedRoute.js","components/InfoToolTip.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","src","logo","alt","loggedIn","userEmail","to","link","onClick","onLogout","description","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","likesNumber","length","key","type","aria-label","onCardDelete","style","backgroundImage","onCardClick","name","onCardLike","Main","onEditAvatar","avatar","about","onEditProfile","onAddPlace","cards","map","index","Footer","Login","email","setUserEmail","password","setPassword","handleLoginSubmit","setEmail","history","useHistory","useEffect","push","action","title","onSubmit","placeholder","required","value","onChange","e","target","Register","registered","handleRegisterSubmit","localStorage","getItem","PopupWithForm","isOpen","noValidate","onClose","children","EditProfilePopup","useState","setName","setDescription","preventDefault","onUpdateUser","id","minLength","maxLength","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","setTitle","setLink","PopupWithImage","api","baseUrl","headers","this","_baseUrl","_headers","Promise","all","getInitialCards","getUserInfo","fetch","then","res","ok","json","reject","status","catch","err","console","log","imageLink","method","body","JSON","stringify","data","cardId","Authorization","auth","options","request","userid","token","a","error","message","setItem","ProtectedRoute","Component","component","InfoToolTip","success","withRouter","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isInfoToolTipOpen","setIsInfoToolTipOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","setLoggedIn","tooltipMode","setTooltipMode","setRegistered","closeAllPopups","handleToolTip","resetForm","handleLogin","handleLogout","removeItem","userProfile","getContent","Provider","exact","path","authorize","Error","register","updateProfile","updateAvatar","addNewCard","newCard","changeLikeCardStatus","newCards","c","deleteCard","filter","from","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.608bc6eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8f7611ae.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from './../images/logo.svg';\n\nfunction Header(props) {\n  return (\n    <header className='header'>\n      <img className='header__logo' src={logo} alt='logo' />\n      <p className='header__email'>{props.loggedIn ? props.userEmail : ''}</p>\n      <Link\n        to={props.link.to}\n        className='header__link'\n        onClick={props.onLogout ? props.onLogout : null}\n      >\n        {props.link.description}\n      </Link>\n    </header>\n  );\n}\nexport default Header; ","import React from \"react\";\n\nexport const CurrentUserContext = React.createContext({});","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n  // Checking if you are the owner of the current card\n  // const isOwn = props.card.owner._id === currentUser._id;\n  const isOwn = currentUser && props.card.owner._id === currentUser._id;\n\n  // Creating a variable which you'll then set in `className` for the delete button\n  const cardDeleteButtonClassName = `card__delete-button ${\n    isOwn ? 'card__delete-button_active' : ''\n  }`;\n\n  // Check if the card was liked by the current user\n  // const isLiked = props.card.likes.some((i) => i._id === currentUser._id);\n  const isLiked = currentUser && props.card.likes.some((i) => i._id === currentUser._id);\n\n  // Create a variable which you then set in `className` for the like button\n  const cardLikeButtonClassName = `card__like-button ${\n    isLiked ? 'card__like-button_active' : ''\n  }`;\n\n  const likesNumber = props.card.likes.length;\n\n  return (\n    <>\n      <li key={props.card._id} className='card'>\n        <div className='card__container'>\n          <button\n            type='button'\n            // className=\"card__delete-button\"\n            aria-label='Delete button'\n            className={cardDeleteButtonClassName}\n            // onClick={handleCardDelete}\n            onClick={() => {\n              props.onCardDelete(props.card);\n            }}\n          ></button>\n          <div\n            className='card__image'\n            style={{ backgroundImage: `url(${props.card.link})` }}\n            // onClick={handleCardClick}\n            onClick={() => {\n              props.onCardClick(props.card);\n            }}\n          ></div>\n          <div className='card__text'>\n            <h2 className='card__title'>{props.card.name}</h2>\n            <div className='card__like-container'>\n              <button\n                type='button'\n                // className=\"card__like-button\"\n                aria-label='Like button'\n                className={cardLikeButtonClassName}\n                // onClick={handleLikeClick}\n                onClick={() => {\n                  props.onCardLike(props.card);\n                }}\n              ></button>\n              <p className='card__like-counter'>{likesNumber}</p>\n            </div>\n          </div>\n        </div>\n      </li>\n    </>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <>\n      <section className='profile'>\n        <div className='profile__container'>\n          <div className='profile__image-container'>\n            <button\n              className='profile__image-edit'\n              aria-label='Update profile image'\n              onClick={props.onEditAvatar}\n            ></button>\n            <img\n              className='profile__image'\n              src={currentUser.avatar}\n              alt='profile-picture'\n            />\n          </div>\n          <div className='profile__info'>\n            <div className='profile__text'>\n              <h1 className='profile__title'>{currentUser.name}</h1>\n              <p className='profile__subtitle'>{currentUser.about}</p>\n            </div>\n            <button\n              className='button profile__edit-button'\n              aria-label='Edit button'\n              onClick={props.onEditProfile}\n            ></button>\n          </div>\n        </div>\n        <button\n          className='button profile__add-button'\n          aria-label='Add button'\n          onClick={props.onAddPlace}\n        ></button>\n      </section>\n\n      {/* Template initial cards */}\n      <section className='cards'>\n        <ul className='cards__grid'>\n          {props.cards.map((card, index) => (\n            <Card\n              key={index}\n              card={card}\n              onCardClick={props.onCardClick}\n              onCardLike={props.onCardLike}\n              onCardDelete={props.onCardDelete}\n            />\n          ))}\n        </ul>\n      </section>\n    </>\n  );\n}\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className='footer'>\n      <p className='footer__copyright'>© 2020 | Linda Kovacs - Around The U.S.</p>\n    </footer>\n  );\n}\nexport default Footer;\n","import React, { useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nfunction Login({\n    email,\n    loggedIn,\n    userEmail,\n    setUserEmail,\n    password,\n    setPassword,\n    handleLoginSubmit,\n    setEmail,\n  }) \n  {\n  // const [email, setEmail] = useState('');\n  // const [password, setPassword] = useState('');\n  const history = useHistory();\n\n  // const resetForm = () => {\n  //   setEmail('');\n  //   setPassword('');\n  // };\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   auth\n  //     .authorize(email, password)\n  //     .then((data) => {\n  //       if (!email || !password) {\n  //         throw new Error('400 - one or more of the fields were not provided');\n  //       }\n  //       if (!data) {\n  //         throw new Error('401 - the user with the specified email not found');\n  //       }\n  //       if (data.token) {\n  //         props.handleLogin();\n  //       }\n  //     })\n  //     .then(() => history.push('/main'))\n  //     // .then(resetForm)\n  //     .catch((err) => {\n  //       console.log(err.message);\n  //     });\n  // };\n\n  // useEffect(() => {\n  //   if (localStorage.getItem('token')) {\n  //     history.push('/main');\n  //     setUserEmail(email || userEmail);\n  //   }\n  // }, [history, email, userEmail, setUserEmail]);\n\n  // useEffect(() => {\n  //   if (loggedIn) {\n  //     history.push('/main');\n  //     setUserEmail(email || userEmail);\n  //   }\n  // }, [history, email, loggedIn, userEmail, setUserEmail]);\n\n  useEffect(() => {\n    if (loggedIn) {\n      history.push('/main');\n      setUserEmail(email || userEmail);\n    }\n  });\n\n  return (\n    <>\n      <div className='auth__container'>\n        <h2 className='auth__title'>Log in</h2>\n        <form\n          action='#'\n          className='auth'\n          title='Log in'\n          onSubmit={handleLoginSubmit}\n          to='/main'\n        >\n          <input\n            className='form__input-dark'\n            placeholder='Email'\n            type='email'\n            required\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <input\n            className='form__input-dark'\n            placeholder='Password'\n            type='password'\n            required\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <button\n            type='submit'\n            className='form__submit-button_dark'\n            onClick={handleLoginSubmit}\n          >\n            Log in\n          </button>\n        </form>\n        <Link className='auth__link' to='/signup'>\n          Not a member yet? Sign up here!\n        </Link>\n      </div>\n    </>\n  );\n}\nexport default Login; ","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n// import React, { useState, useEffect } from 'react';\n// import { Link, useHistory } from 'react-router-dom';\n// import auth from '../utils/auth';\n\nfunction Register({\n  registered,\n  handleRegisterSubmit,\n  history,\n  email,\n  setEmail,\n  password,\n  setPassword,\n}) {\n  // const [email, setEmail] = useState('');\n  // const [password, setPassword] = useState('');\n  // const history = useHistory();\n\n  // const resetForm = () => {\n  //   setEmail('');\n  //   setPassword('');\n  // };\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   auth\n  //     .register({ email, password })\n  //     .then(resetForm)\n  //     .then((res) => {\n  //       props.handleToolTip('success');\n  //       return res;\n  //     })\n  //     .then((res) => {\n  //       history.push('/signin');\n  //       return res;\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      history.push('/main');\n    }\n  }, [history]);\n\n  // useEffect(() => {\n  //   if (registered) {\n  //     history.push('/signin');\n  //   }\n  // }, [history, registered]);\n\n  return (\n    <>\n      <div className='auth__container'>\n        <h2 className='auth__title'>Sign up</h2>\n        <form\n          action='#'\n          className='auth'\n          title='Sign up'\n          onSubmit={handleRegisterSubmit}\n        >\n          <input\n            className='form__input-dark'\n            placeholder='Email'\n            type='email'\n            required\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <input\n            className='form__input-dark'\n            placeholder='Password'\n            type='password'\n            required\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <button\n            type='submit'\n            className='form__submit-button_dark'\n            onSubmit={handleRegisterSubmit}\n            to='/main'\n          >\n            Sign up\n          </button>\n        </form>\n        <Link className='auth__link' to='/signin'>\n          Already a member? Log in here!\n        </Link>\n      </div>\n    </>\n  );\n}\nexport default Register; ","import React from 'react';\n\nfunction PopupWithForm(props) {\n  return (\n    <>\n      <section\n        className={`form form__${props.name} ${\n          props.isOpen ? 'form_visible' : ''\n        }`}\n      >\n        <form\n          className='form__container'\n          name={`form__${props.name}`}\n          action='#'\n          noValidate\n          onSubmit={props.onSubmit}\n        >\n          <button\n            className='form__reset-button'\n            type='reset'\n            aria-label='Close button'\n            onClick={props.onClose}\n          ></button>\n          <h2 className='form__header'>{props.title}</h2>\n          {props.children}\n        </form>\n      </section>\n    </>\n  );\n}\n\nexport default PopupWithForm;","import React, { useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = useState();\n  const [description, setDescription] = useState();\n\n    // After loading the current user from the API\n  // their data will be used in managed components.\n  React.useEffect(() => {\n    setName(currentUser && currentUser.name);\n    setDescription(currentUser && currentUser.about);\n  }, [currentUser]);\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    props.onUpdateUser({\n      name: name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name='edit-profile'\n      title='Edit profile'\n      // isOpen={props.isEditProfilePopupOpen}\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n      <fieldset className='form__fields'>\n        <input\n          type='text'\n          className='form__input form__title'\n          id='name-input'\n          name='name'\n          placeholder='Name'\n          minLength='2'\n          maxLength='40'\n          required\n          value={name || ''}\n          onChange={handleNameChange}\n        />\n        <span className='form__input-error' id='name-input-error'></span>\n\n        <input\n          type='text'\n          className='form__input form__subtitle'\n          id='job-input'\n          name='job'\n          placeholder='Job'\n          minLength='2'\n          maxLength='200'\n          required\n          value={description || ''}\n          onChange={handleDescriptionChange}\n        />\n        <span className='form__input-error' id='job-input-error'></span>\n\n        <button\n          className='form__submit-button'\n          type='submit'\n          value='Save'\n          aria-label='Save button'\n        >\n          Save\n        </button>\n      </fieldset>\n    </PopupWithForm>\n  );\n}\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup(props) {\n    const avatarRef = React.useRef('');\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateAvatar({\n          avatar: avatarRef.current.value,\n        });\n    }\n\n    return (\n      <PopupWithForm\n        name='change-image'\n        title='Change profile picture'\n        // isOpen={props.isEditAvatarPopupOpen}\n        isOpen={props.isOpen}\n        onClose={props.onClose}\n        onSubmit={handleSubmit}\n      >\n        <fieldset className='form__fields'>\n          <input\n            type='url'\n            className='form__input form__image-link'\n            id='linkImage-input'\n            name='imageLink'\n            placeholder='Image link'\n            minLength='2'\n            required\n            ref={avatarRef}\n          />\n          <span className='form__input-error' id='linkImage-input-error'></span>\n          <button\n            className='form__submit-button'\n            type='submit'\n            value='Save'\n            aria-label='Save button'\n          >\n            Save\n          </button>\n        </fieldset>\n      </PopupWithForm>\n    );\n}\nexport default EditAvatarPopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup(props) {\n    const [title, setTitle] = React.useState('');\n    const [link, setLink] = React.useState('');\n\n    function handleTitleChange(e) {\n      setTitle(e.target.value);\n    }\n\n    function handleLinkChange(e) {\n      setLink(e.target.value);\n    }\n\n    function handleSubmit(e) {\n      e.preventDefault();\n      props.onAddPlace({ title, link });\n    }\nreturn (\n  <PopupWithForm\n    name='add-card'\n    title='New place'\n    isOpen={props.isOpen}\n    onClose={props.onClose}\n    onSubmit={handleSubmit}\n  >\n    <fieldset className='form__fields'>\n      <input\n        type='text'\n        className='form__input form__card-title'\n        id='card-input'\n        name='title'\n        placeholder='Title'\n        minLength='1'\n        maxLength='30'\n        required\n        onChange={handleTitleChange}\n      />\n      <span className='form__input-error' id='card-input-error'></span>\n      <input\n        type='url'\n        className='form__input form__image-link'\n        id='link-input'\n        name='link'\n        placeholder='Image link'\n        required\n        onChange={handleLinkChange}\n      />\n      <span className='form__input-error' id='link-input-error'></span>\n      <button\n        className='form__submit-button'\n        type='submit'\n        value='Create'\n        aria-label='Create button'\n      >\n        Create\n      </button>\n    </fieldset>\n  </PopupWithForm>\n);\n}\nexport default AddPlacePopup;","import React from 'react';\n\nfunction PopupWithImage(props) {\n  return (\n    <>\n      <section className={'form form__add-image' + (props.card ? ' form_visible' : '')}>\n        <div className='form__open-image'>\n          <button\n            className='form__reset-button'\n            type='reset'\n            aria-label='Close button'\n            onClick={props.onClose}\n          ></button>\n          <img\n            className='form__image'\n            src={props.card ? props.card.link : '#'}\n            alt={props.card ? props.card.name : ''}\n          />\n          <p className='form__image-title'>\n            {props.card ? props.card.name : ''}\n          </p>\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default PopupWithImage;","class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  getAppInfo() {\n    return Promise.all([this.getInitialCards(), this.getUserInfo()]);\n  }\n\n  // Load Cards from the Server\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    })\n      .then((res) =>\n        res.ok ? res.json() : Promise.reject(`Error: ${res.status}`)\n      )\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // Load User Information from the Server\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    })\n      .then((res) =>\n        res.ok ? res.json() : Promise.reject(`Error: ${res.status}`)\n      )\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // Update Profile Picture\n  updateAvatar(imageLink) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify({ avatar: imageLink }),\n    })\n      .then((res) =>\n        res.ok ? res.json() : Promise.reject(`Error: ${res.status}`)\n      )\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // Edit Profile\n  updateProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n      method: \"PATCH\",\n      body: JSON.stringify({ name, about }),\n    })\n      .then((res) =>\n        res.ok ? res.json() : Promise.reject(`Error: ${res.status}`)\n      )\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // Add New Card\n  addNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n      method: \"POST\",\n      body: JSON.stringify({\n        name: data.title,\n        link: data.link,\n      }),\n    })\n      .then((res) =>\n        res.ok ? res.json() : Promise.reject(`Error: ${res.status}`)\n      )\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // Delete Card\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      headers: this._headers,\n      method: \"DELETE\",\n    })\n      .then((res) =>\n        res.ok ? res.json() : Promise.reject(`Error: ${res.status}`)\n      )\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // Add and Remove Likes\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      headers: this._headers,\n      method: isLiked ? \"DELETE\" : \"PUT\",\n    })\n      .then((res) =>\n        res.ok ? res.json() : Promise.reject(`Error: ${res.status}`)\n      )\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n}\n\n  // Add and Remove Likes\n  // changeLikeCardStatus(isLiked, cardId) {\n  //   if (isLiked) {\n  //     //unlike heart button\n  //     return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n  //       method: \"DELETE\",\n  //       headers: this._headers,\n  //     })\n  //       .then((res) => {\n  //         if (res.ok) {\n  //           return res.json();\n  //         }\n  //         return Promise.reject(`Error: ${res.status}`);\n  //       })\n  //       .catch((err) => {\n  //         console.log(err);\n  //       });\n  //   } else {\n  //     //like heart button\n  //     return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n  //       method: \"PUT\",\n  //       headers: this._headers,\n  //     })\n  //       .then((res) => {\n  //         if (res.ok) {\n  //           return res.json();\n  //         }\n  //         return Promise.reject(`Error: ${res.status}`);\n  //       })\n  //       .catch((err) => {\n  //         console.log(err);\n  //       });\n  //   }\n  // }\n// }\n\nconst api = new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-2\",\n  headers: {\n    Authorization: \"d38c3eff-8aa3-43a2-86b1-ec6a6fc8a616\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;","class Auth {\n  constructor(options) {\n    this.options = options;\n  }\n\n  register(email, password) {\n    return this.request('/signup', 'POST', JSON.stringify({ email, password }));\n  }\n\n  authorize(userid, password) {\n    return this.request(\n      '/signin',\n      'POST',\n      JSON.stringify({ email: userid, password: password })\n    );\n  }\n\n  getContent(token) {\n    return fetch(`${this.options.baseUrl}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`,\n      },\n    }).then(async (res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      const body = await res.json();\n      return Promise.reject(body.error || body.message);\n    });\n  }\n\n  request(auth, method, body) {\n    return fetch(`${this.options.baseUrl}${auth}`, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      method,\n      body,\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        if (!data.message) {\n          localStorage.setItem('token', data.token);\n          return data;\n        } else {\n          return;\n        }\n      });\n  }\n}\nconst auth = new Auth({\n  baseUrl: 'https://register.nomoreparties.co',\n});\n\nexport default auth;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nfunction ProtectedRoute({ component: Component, ...props }) {\n  return (\n    <Route>\n      {() =>\n        props.loggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to='./signin' />\n        )\n      }\n    </Route>\n  );\n}\n\nexport default ProtectedRoute;\n","import React from 'react';\n\nfunction InfoToolTip(props) {\n  // const message = props.success\n  //   ? 'Success! You have now been registered.'\n  //   : 'Oops, something went wrong! Please try again.';\n\n  return (\n    <section\n      className={`form form__${props.name} ${\n        props.isOpen ? 'form_visible' : ''\n      }`}\n    >\n      <div className='form__container'>\n        <div\n          className={`form__tooltip ${\n            props.success === 'success'\n              ? `form__tooltip_success`\n              : `form__tooltip_error`\n          }`}\n        />\n        <p className='form__tooltip-message'>\n          {/* {message} */}\n          {props.success === 'success'\n            ? 'Success! You have now been registered.'\n            : 'Oops, something went wrong! Please try again.'}\n        </p>\n        <button\n          className='form__reset-button'\n          type='reset'\n          aria-label='Close button'\n          onClick={props.onClose}\n        ></button>\n      </div>\n    </section>\n  );\n}\n\nexport default InfoToolTip;\n\n\n// import React from 'react';\n\n// function InfoToolTip(props) {\n//   const message = props.mode\n//     ? 'Success! You have now been registered.'\n//     : 'Oops, something went wrong! Please try again.';\n\n//   return (\n//     <section\n//       className={`form form__${props.name} ${\n//         props.isOpen ? 'form_visible' : ''\n//       }`}\n//     >\n//       <div className='form__container'>\n//         <div\n//           className={`form__tooltip ${\n//             props.mode ? `form__tooltip_success` : `form__tooltip_error`\n//           }`}\n//         />\n//         <p className='form__tooltip-message'>{message}</p>\n//         <button\n//           className='form__reset-button'\n//           type='reset'\n//           aria-label='Close button'\n//           onClick={props.onClose}\n//         ></button>\n//       </div>\n//     </section>\n//   );\n// }\n\n// export default InfoToolTip;","import React, { useState, useEffect } from 'react';\nimport { Route, Switch, withRouter, useHistory, Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport Login from './Login';\nimport Register from './Register';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport PopupWithImage from './PopupWithImage';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\nimport auth from '../utils/auth';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoToolTip from './InfoToolTip';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isInfoToolTipOpen, setIsInfoToolTipOpen] = useState(false);\n\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userEmail, setUserEmail] = useState('');\n  const [tooltipMode, setTooltipMode] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [registered, setRegistered] = useState(false);\n\n  const history = useHistory();\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n    setIsInfoToolTipOpen(false);\n  }\n\n  function handleToolTip(success) {\n    setTooltipMode(success);\n    setIsInfoToolTipOpen(true);\n  }\n\n  function handleUpdateUser({ name, about }) {\n    api\n      .updateProfile(name, about)\n      .then((updateProfile) => {\n        setCurrentUser(updateProfile);\n        setIsEditProfilePopupOpen(false);\n      })\n      .then((res) => closeAllPopups())\n      .catch((err) => console.log(err));\n  }\n\n  function handleUpdateAvatar({ avatar }) {\n    api\n      .updateAvatar(avatar)\n      .then((updateProfile) => {\n        setCurrentUser(updateProfile);\n        setIsEditAvatarPopupOpen(false);\n      })\n      .then((res) => closeAllPopups())\n      .catch((err) => console.log(err));\n  }\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Send a request to the API and getting the updated card data\n    api\n      .changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n        // Create a new array based on the existing one and putting a new card into it\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n        // Update the state\n        setCards(newCards);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleCardDelete(card) {\n    // const isOwn = card.owner._id === currentUser._id;\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        setCards(cards.filter((c) => c._id !== card._id));\n      })\n      .then((res) => closeAllPopups())\n      .catch((err) => console.log(err));\n  }\n\n  function handleAddPlace({ title, link }) {\n    api\n      .addNewCard({ title, link })\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n      })\n      .then((res) => closeAllPopups())\n      .catch((err) => console.log(err));\n  }\n\n  useEffect(() => {\n    if (loggedIn) {\n      api.getUserInfo().then((userProfile) => {\n        setCurrentUser(userProfile);\n      });\n      api\n        .getInitialCards()\n        .then((data) => {\n          if (data) {\n            setCards((cards) => [...cards, ...data]);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [loggedIn]);\n\n  function resetForm() {\n    setEmail('');\n    setPassword('');\n  };\n\n  function handleLogin() {\n    setLoggedIn(true);\n  }\n\n  function handleLoginSubmit(e) {\n    e.preventDefault();\n    // const [email, password] = [e.target.email.value, e.target.password.value];\n    auth\n      .authorize(email, password)\n      .then((data) => {\n        if (data && data.token) {\n          handleLogin();\n        } else {\n          resetForm();\n          if (!email || !password) {\n            throw new Error(\n              '400 - one or more of the fields were not provided'\n            );\n          }\n          if (!data) {\n            throw new Error(\n              '401 - the user with the specified email not found'\n            );\n          }\n        }\n      })\n      .then(resetForm)\n      .then(() => history.push('/main'))\n      .catch((err) => console.log(err.message));\n  };\n\n  function handleRegisterSubmit (e) {\n    e.preventDefault();\n    auth\n      .register(email, password)\n      .then((res) => {\n        if (!res.data) {\n          handleToolTip('error');\n          throw new Error(`400 - ${res.message ? res.message : res.error}`);\n        }\n      })\n      .then((res) => {\n        setRegistered(true);\n        history.push('/signin');\n        return res;\n      })\n      .then((res) => {\n        handleToolTip('success');\n        return res;\n      })\n      .then(resetForm)\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  function handleLogout() {\n    localStorage.removeItem('token');\n    setLoggedIn(false);\n    history.push('/signin');\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      auth\n        .getContent(token)\n        .then((res) => {\n          setLoggedIn(true);\n          setUserEmail(res.data.email);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      setLoggedIn(false);\n    }\n  }, [loggedIn, userEmail]);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <Switch>\n        <Route exact path='/signin'>\n          <Header\n            userEmail={userEmail}\n            loggedIn={loggedIn}\n            onLogout={handleLogout}\n            link={{ description: 'Sign up', to: '/signup' }}\n          />\n          <Login\n            loggedIn={loggedIn}\n            email={email}\n            setEmail={setEmail}\n            password={password}\n            setPassword={setPassword}\n            userEmail={setUserEmail}\n            setUserEmail={setUserEmail}\n            handleLogin={handleLogin}\n            handleLoginSubmit={handleLoginSubmit}\n            onLogout={handleLogout}\n            isOpen={isInfoToolTipOpen}\n            handleToolTip={handleToolTip}\n            success={tooltipMode}\n          />\n          <InfoToolTip\n            isOpen={isInfoToolTipOpen}\n            success={tooltipMode}\n            onClose={closeAllPopups}\n            loggedIn={loggedIn}\n          />\n        </Route>\n        <Route exact path='/signup'>\n          <Header\n            userEmail={userEmail}\n            loggedIn={loggedIn}\n            link={{ description: 'Log in', to: '/signin' }}\n          />\n          <Register\n            registered={registered}\n            email={email}\n            setEmail={setEmail}\n            password={password}\n            setPassword={setPassword}\n            handleRegisterSubmit={handleRegisterSubmit}\n            setUserEmail={setUserEmail}\n            handleLogin={handleLogin}\n            handleToolTip={handleToolTip}\n          />\n          <InfoToolTip\n            isOpen={isInfoToolTipOpen}\n            success={tooltipMode}\n            onClose={closeAllPopups}\n            loggedIn={loggedIn}\n          />\n        </Route>\n        <Route exact path='/'>\n          {loggedIn ? <Redirect to='/main' /> : <Redirect to='/signin' />}\n        </Route>\n        <Route path='/main'>\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n          />\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlace}\n          />\n          <PopupWithForm\n            name='confirmation'\n            title='Are you sure?'\n            isOpen={false}\n            onClose={closeAllPopups}\n          />\n          <PopupWithImage onClose={closeAllPopups} card={selectedCard} />\n\n          <Header\n            loggedIn={loggedIn}\n            userEmail={userEmail}\n            link={{ description: 'Log out', to: '/signin' }}\n            onLogout={handleLogout}\n          />\n          <ProtectedRoute\n            path='/main'\n            loggedIn={loggedIn}\n            component={Main}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n            onClose={closeAllPopups}\n            isEditProfilePopupOpen={isEditProfilePopupOpen}\n            isAddPlacePopupOpen={isAddPlacePopupOpen}\n            isEditAvatarPopupOpen={isEditAvatarPopupOpen}\n            selectedCard={selectedCard}\n            cards={cards}\n          />\n          <Footer />\n        </Route>\n        {/* {loggedIn && <Footer />} */}\n        <Redirect from='*' to='/' />\n      </Switch>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}